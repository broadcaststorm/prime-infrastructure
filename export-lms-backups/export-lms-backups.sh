#!/bin/sh

###  Script to generate compressed tar files (.tar.gz) for the regular backups
###  that are generated by a scheduled task in Prime LMS

###  Assumptions:  
###   1. Each backup jobs generates a new, discreet subdirectory for its data
###   2. A password free mechanism for SFTP to transfer files to TARGET_SERVER
###      has been set up (passphrase free SSH key pair with restricted logins)
###   3. The TARGET_SERVER is handling the aging of files

#  Tell sh to not use spaces as "field separators"
IFS=$'\n\t'

#  Define some configuration parameters.  These are relative to Prime appliance
BACKUP_DIR=/opt/LMSbackup
OUTPUT_DIR=${BACKUP_DIR}/outputs

TIMESTAMP=$(/bin/date +%Y%m%d)
OUTPUT_FILE=${OUTPUT_DIR}/lms.backup.cron.output.${TIMESTAMP}.log

if /usr/bin/test -f ${BACKUP_DIR}/export-lms-backups.cfg; then
  . ${BACKUP_DIR}/export-lms-backups.cfg
else
  /bin/echo "Can't find the config file ${BACKUP_DIR}/export-lms-backups.cfg"
  exit 1
fi

#  These relate to the destination host for your backups
TARGET_USERNAME=${REMOTE_LMS_USER}
TARGET_SERVER=${REMOTE_LMS_HOST}
TARGET_DIR=${REMOTE_LMS_DIRECTORY}

#  These relate to the names of the backup files created
PREFIX=prime-lms.backup
SUFFIX=tar.gz

###
###  GET TO WORK
###

#  Create output directory if it doesn't exist
/bin/mkdir -p ${OUTPUT_DIR}

#  Note new run of the backup script
/bin/echo "" >> ${OUTPUT_FILE}
/bin/echo "New invocation of backup script: $(/bin/date)" >> ${OUTPUT_FILE}
/bin/echo "" >> ${OUTPUT_FILE}

#  Find the sub-directories in BACKUP_DIR
for DIR in $(/usr/bin/find ${BACKUP_DIR} -mindepth 1 -maxdepth 1 -type d); do 

  #  Skip this iteration if we found the OUTPUT_DIR
  if [ "${DIR}" == "${OUTPUT_DIR}" ]; then
    continue
  fi

  #  Get the stat timestamp on the directory (YYYY-MM-DD)
  STATDATA=$(/usr/bin/stat ${DIR} -c %y | /usr/bin/awk '{print $1;}')

  #  Shorten time stamp to YYYYMMDD
  STATTIME=${STATDATA//-/}

  #  Extract the local relative directory name (instead full path name)
  SUB_NAME=$(/bin/basename ${DIR})

  #  Construct backup compressed tar file name, which should look something
  #  like:  /opt/LMSbackup/prime-lms.backup.NUM.DATE.tar.gz
  TAR_FILE_NAME=${BACKUP_DIR}/${PREFIX}.${SUB_NAME}.${STATTIME}.${SUFFIX}

  #  Okay, now.  Does that file actually exist and have a non-zero size?  
  #  If so, skip it as it has already been archived.
  if /usr/bin/test -s ${TAR_FILE_NAME}; then
    /bin/echo "Skipping archive creation of ${TAR_FILE_NAME}" >> ${OUTPUT_FILE}
    continue
  fi

  #  Free and clear to create the tar file
  /bin/echo "Creating archive file ${TAR_FILE_NAME}" >> ${OUTPUT_FILE}

  /bin/tar -cvzf ${TAR_FILE_NAME} ${DIR} >> ${OUTPUT_FILE}

  #  Did it work just fine?
  if [ $? -ne 0 ]; then
    /bin/echo "Error creating archive file ${TAR_FILE_NAME}. Skipping transfer" >> ${OUTPUT_FILE}
    continue
  fi

  #  Copy the file to TARGET_SERVER
  /bin/echo "Transferring archive file to ${TARGET_SERVER}:${TARGET_DIR}" >> ${OUTPUT_FILE}
  /usr/bin/scp ${TAR_FILE_NAME} ${TARGET_USERNAME}@${TARGET_SERVER}:${TARGET_DIR} >> ${OUTPUT_FILE} 2>&1

  #  Any errors?
  if [ $? -ne 0 ]; then
    /bin/echo "Error transferring archive file ${TAR_FILE_NAME} to" >> ${OUTPUT_FILE}
    /bin/echo "${TARGET_SERVER} location ${TARGET_DIR}" >> ${OUTPUT_FILE}
  fi

done

# Clean up old files
for i in $(/usr/bin/find ${BACKUP_DIR} -mindepth 1 -maxdepth 1 -type f -mtime +${LOCAL_LMS_EXPIRE_AGE} -name "*.gz"); do

  /bin/echo "Removing old backup file ${i}" >> ${OUTPUT_FILE}
  /bin/echo /bin/rm -f ${i} >> ${OUTPUT_FILE}

done

